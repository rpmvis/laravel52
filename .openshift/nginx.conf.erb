# Enable Gzip
gzip  on;
gzip_http_version 1.0;
gzip_comp_level 2;
gzip_min_length 1100;
gzip_buffers     4 8k;
gzip_proxied any;
gzip_types
  # text/html is always compressed by HttpGzipModule
  text/css
  text/javascript
  text/xml
  text/plain
  text/x-component
  application/javascript
  application/json
  application/xml
  application/rss+xml
  font/truetype
  font/opentype
  application/vnd.ms-fontobject
  image/svg+xml;

gzip_static on;
gzip_proxied        expired no-cache no-store private auth;
gzip_disable        "MSIE [1-6]\.";
gzip_vary           on;

server {
    listen  <%= ENV['OPENSHIFT_NGINX_IP'] %>:<%= ENV['OPENSHIFT_NGINX_PORT'] %>;
    root    <%= ENV['OPENSHIFT_REPO_DIR'] %>/public;

    # index: tells Nginx which file to serve if none is specified
    index index.php index.html index.htm;
    charset utf-8;

    location / {
        root    <%= ENV['OPENSHIFT_REPO_DIR'] %>/public;
        # try_files: allow "pretty" URLs
        try_files \$uri \$uri/ /index.php?\$query_string app.html;
    }

    #  "location =" : this forces an exact match with the path requested
    #                 and then stops searching for more specific matches
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # "location ~" : Nginx performs a regular expression match
    location ~ \.php$ {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass unix:<%= ENV['OPENSHIFT_PHP_SOCKET'] %>;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param PATH_INFO $fastcgi_script_name;
      include <%= ENV['OPENSHIFT_NGINX_DIR'] %>/usr/nginx-<%= ENV['OPENSHIFT_NGINX_VERSION'] %>/conf/fastcgi_params;
    }

    # ReneVis: serve static files
    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
      root    <%= ENV['OPENSHIFT_REPO_DIR'] %>/public;
      expires 30d;
    }

    # "location ~" : Nginx performs a regular expression match
    location ~ /\.htaccess {
        deny all;
    }
}
